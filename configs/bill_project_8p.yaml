MODEL:
  META_ARCHITECTURE: "RetinaNet"
  BACKBONE:
    NAME: "build_retinanet_resnet_fpn_backbone"
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res3", "res4", "res5"]
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512 ]]"]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  RETINANET:
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
    SMOOTH_L1_LOSS_BETA: 0.0
DATASETS:
  TRAIN: ("bill_card_train",)
  TEST: ("bill_card_val",)
SOLVER:
  IMS_PER_BATCH: 32
  BASE_LR: 0.01  # Note that RetinaNet uses a different default learning rate
  STEPS: (2000, 4000)
  MAX_ITER: 6000
  CHECKPOINT_PERIOD: 500
INPUT:
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
TEST:
  EVAL_PERIOD: 100000000
VERSION: 2
