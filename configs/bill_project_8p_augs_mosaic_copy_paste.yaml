MODEL:
  META_ARCHITECTURE: "RetinaNet"
  BACKBONE:
    NAME: "build_retinanet_resnet_fpn_backbone"
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res3", "res4", "res5"]
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [64, 128, 256, 512, 1024 ]]"]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  RETINANET:
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
    SMOOTH_L1_LOSS_BETA: 0.0
    NUM_CLASSES: 1
DATASETS:
  TRAIN: ("bill_card_train",)
  TEST: ("bill_card_val",)
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.005  # Note that RetinaNet uses a different default learning rate
  STEPS: (6000, 12000)
  MAX_ITER: 15000
  CHECKPOINT_PERIOD: 1000
INPUT:
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  RANDOM_FLIP: none
  RANDOM_ROTATION_3D:
    ENABLED: True
  RANDOM_Margin_CROP:
    ENABLED: True
  RANDOM_COLOR_JITTER:
    ENABLED: True
  RANDOM_COPY_PASTE:
    ENABLED: True
    PROB: 0.5
    WITH_MOSAIC: True
TEST:
  EVAL_PERIOD: 100000000
VERSION: 2
